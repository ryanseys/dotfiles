[alias]
  files = diff-tree --no-commit-id --name-only -r # 'git files bd61ad98' to list files in a given commit
  squash = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f" # 'git squash N' squashes N commits
  lg = log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --no-merges
  st = status -sb
  cm = commit -m
  aa = add --all
  co = checkout
  cp = cherry-pick
  master = checkout master
  new = checkout -b
  amend = commit --amend --no-edit
  branches = branch -l
  undo = reset --soft HEAD~1
  cleanup = clean -df
  pushf = push --force-with-lease
  diffc = diff --cached
	amend-to = "!f() { SHA=`git rev-parse \"$1\"`; git stash -k && git commit --fixup \"$SHA\" && GIT_SEQUENCE_EDITOR=true git rebase --interactive --autosquash \"$SHA^\" && git stash pop; }; f"
[color]
  diff = auto
  status = auto
  branch = auto
[branch]
  autosetuprebase = always
[push]
	default = current
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
[user]
	name = Ryan Seys
	email = ryan.seys@shopify.com
[core]
	editor = vim
	commitGraph = true
	excludesfile = ~/.gitignore_global
[diff]
	algorithm = patience
[gc]
	writeCommitGraph = true
[protocol]
	version = 2
[pull]
	rebase = true
[init]
	defaultBranch = master
[remote "origin"]
	prune = true
[rebase]
	autoStash = true
	autosquash = true
