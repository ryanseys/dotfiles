#!/bin/zsh

# git-open to open the current branch in github
function git-open() {
  CURRENT_BRANCH=$(git branch --show-current)
  REMOTE_BRANCH=$(git config --get branch.$CURRENT_BRANCH.remote)
  MERGE_BRANCH=$(git config --get branch.$CURRENT_BRANCH.merge | cut -d '/' -f 3-)
  GIT_REMOTE_URL=$(git ls-remote --get-url $REMOTE_BRANCH)
  URL_TO_OPEN=$(echo $GIT_REMOTE_URL | sed 's/.git$//g')

  open "$URL_TO_OPEN/compare/$MERGE_BRANCH?expand=1"
}

# gpr = git pull & rebase.
# checkouts the default branch, pulls it from origin, switches back to existing branch, and rebases
function gpr() {
  export DEFAULT_BRANCH=`git rev-parse --abbrev-ref origin/HEAD | sed 's/origin\///g'`
  git checkout $DEFAULT_BRANCH
  git pull

  git checkout -
  git rebase $DEFAULT_BRANCH
}

# fixup lets you choose a commit to fix up and it automatically applies the
# stages changes in git as a fixup commit and applies it by rebasing off
# the main / master branch automatically
# Usage: fixup-main
function fixup-main() {
  export STAGED_CHANGES=`git diff --name-only --cached`
  [[ -z $STAGED_CHANGES ]] && echo "No staged changes to fixup. Exiting..." && exit

  export COMMIT_SHA=`git log -n 50 --pretty=format:'%h %s' --no-merges | fzf | cut -c -7`
  git commit --fixup $COMMIT_SHA

  export DEFAULT_BRANCH=`git rev-parse --abbrev-ref origin/HEAD | sed 's/origin\///g'`
  GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash $DEFAULT_BRANCH
}

function killport() {
  export PROCESSES_ON_PORT=`lsof -ti:$1`

  if [ -z "$PROCESSES_ON_PORT" ]; then
    echo "No processes on port $1"
  else
    echo "Killing processes on port $1"
    kill -9 $PROCESSES_ON_PORT
  fi
}

alias favme="mysides add $(basename $(pwd)) file://$(pwd)"
# Add directory to sidebar favorites.
# Install with `brew install --cask mysides`
# Usage: `fav code file:///Users/ryanseys/code` to that dir to Mac sidebar.
alias fav="mysides add"
alias up="dev up"
alias dsl="bin/tapioca dsl"
alias style="bin/style --include-branch-commits"
alias gitclean='git branch --merged | egrep -v "(^\*|master|main)" | xargs git branch -d'
alias please="sudo"
alias aliases="$EDITOR ~/.aliases"
alias pull="git pull"
alias rt="ruby -Itest"
alias zshrc="$EDITOR ~/.zshrc"
alias resource="source ~/.zshrc"
alias gitconfig="$EDITOR ~/.gitconfig"
alias gitconfig_local="$EDITOR ~/.gitconfig_local"
alias gitaliases="$EDITOR ~/.gitconfig"
alias be="bundle exec"
alias tc="bin/typecheck"
alias fix="bin/typecheck && bin/style --include-branch-commits"
alias dotfiles="cd ~/dotfiles"
alias utc="$HOME/bin/convert_utc.rb"
alias dt="dev test --include-branch-commits"
alias dta="dev test -a"
alias vrt="VCR=all dev test"
alias back="cd -"

# Build and run the app on my personal iPhone (SeysPhone)
alias runios="yarn react-native run-ios"
alias runiosdevice="yarn react-native run-ios --udid=00008120-000475463E78C01E"
